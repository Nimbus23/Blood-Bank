<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QCKRXhpZgAATU0AKgAAAAgAAgEOAAIAAABNAAAAJoKYAAIAAAAO
        AAAAdAAAAABtYWxlIHByb2ZpbGUgaWNvbiwgaXNvbGF0ZWQsIHdoaXRlIG9uIHRoZSBibHVlIGJhY2tn
        cm91bmQuIEV4Y2x1c2l2ZSBTeW1ib2xzAAByYXNoYWRhc2h1cm92AP/bAEMACgcHCAcGCggICAsKCgsO
        GBAODQ0OHRUWERgjHyUkIh8iISYrNy8mKTQpISIwQTE0OTs+Pj4lLkRJQzxINz0+O//bAEMBCgsLDg0O
        HBAQHDsoIig7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O//C
        ABEIAmQCZAMBEQACEQEDEQH/xAAaAAEAAgMBAAAAAAAAAAAAAAAABQYCAwQB/8QAGQEBAAMBAQAAAAAA
        AAAAAAAAAAEDBAIF/9oADAMBAAIQAxAAAAHPb5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/xAAmEAABBAIBAwQDAQAAAAAAAAADAAECBBRQMBESMxMxQGAgISOg/9oACAEBAAEFAv8AO03V3asZ
        1hGWCZPTMykIkPowxzK46UIpmaLfiQAyItOcPodeu5njFoR4bFZip2eL78InMRmaLcdsHfHf1B9geWwP
        0jb2Ee8nNej1HvabdbHNYbur72j5uYni3tHzcxPFvaPm5ieLe0fNzE8W9rV/SbmdurHA4JbsPn+Be8G7
        9lF+6PPfl+95Sn3B5zz9Q28rF9I3NZL6Qt9TL3j5TF9Yu+ET0iM/VuO6Xth9ApF6txSk0Ykm5CfQIyeE
        hkYsOG6bq/0Kuf0Z8Fk/ow+hv7N7fnf9/ocByLLgujlNvoQQSM4xxFHhsVO9ez78FR5pmZm4zV4mYg5C
        lvIxecgVGHzzhEkTVZC3YasyoYoCj8E1OM1KMoPth1yFQqgx/FnCM2JRdlKLwfZDqkIh1Rj+TKEZsSip
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM7RgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQsA
        AbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdgAAAAA
        sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAYAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAPgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAHgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAUAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAAAdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAATgAAAAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAYAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAABgAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGAAAAAASgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgAAAADAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAAAcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACQAAAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAwAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AO8AAAAASgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAAAB5AA
        AAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAANgAAAAAAAAACNgAAAAAAAAAAAAAAAAAAAAAAAB3AAAAAAA
        AAAAAB4AAAAAAAAAAAAAAAAAAAAAAO0AAAAAAAAAAAAABpAAAAAAAAAAAAAAAAAAAAANgAAAAAAAAAAA
        AAAAFAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAAAXgAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAOgAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAADsAAAAAAAAAAAAAAAAAQAAA
        AAAAAAAAAAAAAAAAQgAAAAAAAAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAf/8QAKBEAAQMEAQQBBAMAAAAAAAAAAQARYSEwMVBgQEFRcYEgoKHwkbHB/9oACAED
        AQE/EPt2gCSwqi09f78KcfvwiPs6ynBhZgVSqQAGA+rCFWKx+eBkNzhABrQdQoUQSY54AVYAMLlC5HAK
        kcm84AY3zH5X3x8N8D+ovsKN9n9X8vpDe5/V/L6Q3uf1fy+kN7n9X8vpDetnOTfIcMUeLeMreehb/PeO
        RUIAAjoKnyb2ieOgfjvc5g38bk439fZF537O2/MFAQQ4uUTk/wBcBdDu2LYAJKKQuAkAGQgAC04WfPA8
        tg2cFk8EOELGXy/zghiyBR2OBlaY82wAPNRBBY8AP4PhAABhcAz5RBt6IsFV3kN8awKqCo3dSNAgDB0V
        UpP4R1gbb4AMFWsnpRrA6KKl8IgwNs6iaBVRnPUgGB0HJI6wNr65gKsAV60AMQhmpIqwNqyEwyqhUdCN
        YEelUaoazGjcQhqQoWkIYtqRYjOkBgTqQYNIDFqQYEDSDQY1BQDBtIFS96gUqpFIpFIpFIpFIpFIpFIp
        FIpFIpFIpFIpFIpFIpFIpFIpFIpFIpFIpFIgTF9wz//EACYRAAEDBAEEAgMBAAAAAAAAAAEAEWEhMDFQ
        YEBBUXGBoCChwfD/2gAIAQIBAT8Q+u0SBUoi7r2L2f75QMsEeDDXQzwRJJc/ljyqJRwMFAyiE5tFpOEC
        CHHAAOIkkubjp2DwCi9heZz33zxfMF5b42viYN9hv4kd7hv4kd7hv4kd7hv4kd69YYvgsXQwnePpeOhd
        vDPQohix6Ckd6af56BpG9xeRf9Xv6Qwb1I37shBBY3HnO3AWC22ASYIYg4CABijvLTQf8cDZUzZzmBwQ
        ZRsY/D+8EC2Q4Qe/Axlco65tQBZqOACozRJJc3PUIa+9AByjU0C+U3Cppod3RRUo6/RD0VBABy2+byqH
        gdKQcFCNBRAHGznyqfgdSQnBXaFAHLX0fJWTx1oJBcImFADlqyQDlUkUGhIOSDQc6oqRozYCjqTw0jvX
        UlT60hOPrUk56QnHUm5+9IX7agIly+kOgamFQqFQqFQqFQqFQqFQqFQqFQqFQqFQqFQqFQqFQqFQqFQq
        FQqFQqFQ/Yal/8QALBABAAEBBgYCAgIDAQAAAAAAAREAITFBYcHwMFBRcYGhYJFAsdHhEKDxIP/aAAgB
        AQABPxD/AF2s9KhfRRYpsfSLPqgpcpov8DZf0D/Cp5OX2J5JKAJEfgt2pcF33S+iDxUPBa+XxQs+uEDw
        f+paTf8AdL/NGKnbMgH68IcqxS5GEcPgU0VYG9dNTsOW8As4UEILMOT+V9POViw/AHEQsOyW4/qj/wAA
        Lg4gNe8DBvO5eeShkk59cUMdQt0wPq3uvGCCrDMBvPDPiOfWNsBBsumgAAIC440aL0bMT7c+BbAu9mpx
        zRxD3sPZRdz3YZOPs/VVx257sMnH2fqq47c92GTj7P1Vcdue7DJx9n6quO3POwrgGNOrEgDYX9z1frPj
        FdLgmJGgKpa19l6zPfPGY0+zNnuPwVZ1rzYdJ54PKCJ0RkpbJP2kk/AlC3A+uelpkpv2ytXtPH4E2JGU
        uLO9r556SIhItixOzZ2XjiqOQBtFv8C3vHWgABcc9SSGmaTEC34L4u+uvFRABKrAFSAY2zA6t/8Azn8u
        KOAxbzXuFFcGBcjc8SzmK75Pu7tPwG4E1nHGeH05cMIDCMAqRMb47R9fAbcQxo5JZ5pj7G3EsR7cIQlO
        IYt54Xvjp8DVJqlktn0H7y7FDJJwCMtygiwi9dpPvvSoQhUZVb1+B+s16B8MrtxktLnqtCA6EcCOVelG
        8GMRQiSMnwKR2tDlnbqf1RBitXE6ri8IxEW3a9cn049aaCsChWZz9QJWCsTAXHe6PfajbjAIAyOJOlig
        lvZ6lLegi0eo89u8BYGa4GbTag29Vl1c31x25q2HB6jg1ZDdsSyydMz1QySc5UCVgqASLYrPJq+6iTLe
        Wr1XH8JRK7WP/V2+qf8ATjEdRuTtzZQJWCo6ZZQmRe/rOgTQtAsX0Htz/FVvmAuzHBzK60BJD4/l90kB
        MGJ7dTM5koXsVFz7Ctdr33FNhFtvkci4/ef5KZM6rzk06e5ini8eZ71MJ7oWdjc+OXKBKwVbQFsNoyvP
        mCoeP/0mB4/NvgOShqQmuqq7N55nxWTfi/Mbk7crcAqAxqzWrRS2yavrkKB4wwPUbxzKthBhXs6me3lN
        i38I5Gs5n2Q05L1OUoYL6EXkhWr0+rHKUfxB2AaPJEf/ALTOvKbQEPtOPUckZMWRvqfseUNg1J5CSmcJ
        5JYDZ5yf0coCkWqQUN2CB45JAcvQ/Y15QgF6Esm0rYOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlb
        Z0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0rbOlbZ0r
        bOlbZ0or4VgYPg/2Gf/Z
</value>
  </data>
</root>